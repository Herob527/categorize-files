services:
  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    container_name: categorize-minio
    restart: always
    ports:
      - "9000:9000"      # API port
      - "9001:9001"      # Console port
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    env_file:
      - .env

  db:
    image: postgres:17.5-bookworm
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data/pgdata
    ports:
      - "3053:5432"
    command:
      - postgres
    networks:
      - postgres
    env_file:
      - .env

  adminer:
    image: adminer:5.3.0
    restart: always
    ports:
      - 3052:8080
    networks:
      - postgres

  backend:
    restart: always
    container_name: categorize-backend
    build:
      context: ./fastapi-categorise-backend
    ports:
      - "3051:80"
    develop:
      watch:
        - action: sync
          path: ./fastapi-categorise-backend
          target: /app
        - action: rebuild
          path: pyproject.toml
        - action: rebuild
          path: poetry.lock
    networks:
      - app
      - postgres
      - storage
    environment:
      - SQLALCHEMY_DATABASE_URL=postgresql+psycopg://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_SECURE=false
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-categorize-files}
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    container_name: categorize-frontend
    restart: always
    build:
      context: ./vue-categorise-frontend
    ports:
      - "3050:5173"
    environment:
      - NODE_ENV=development
      - DOCKER=true
    develop:
      watch:
        - action: sync
          path: ./vue-categorise-frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    networks:
      - app
    depends_on:
      - backend
      - minio

volumes:
  pgdata:
    driver: local
  minio_data:
    driver: local

networks:
  postgres:
  app:
  storage:
