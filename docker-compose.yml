include:
  - ./docker-compose/database.yml
  - ./docker-compose/storage.yml
  - ./docker-compose/monitoring.yml

services:
  backend:
    restart: always
    container_name: categorize-backend
    build:
      context: ./fastapi-categorise-backend
    ports:
      - "3051:80"
    develop:
      watch:
        - action: sync
          path: ./fastapi-categorise-backend
          target: /app
        - action: rebuild
          path: pyproject.toml
        - action: rebuild
          path: poetry.lock
    networks:
      - app
      - postgres
      - storage
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2G
        

    environment:
      - SQLALCHEMY_DATABASE_URL=postgresql+psycopg://${DB_USER}:${DB_PASSWORD}@db/${DB_NAME}
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD}
      - MINIO_SECURE=false
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-categorize-files}
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    container_name: categorize-frontend
    restart: always

    build:
      context: ./vue-categorise-frontend
      target: dev 
    ports:
      - "3050:5173"
    environment:
      - NODE_ENV=development
      - DOCKER=true
    develop:
      watch:
        - action: sync
          path: ./vue-categorise-frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    networks:
      - app
    depends_on:
      - backend
      - minio


networks:
  postgres:
  app:
  storage:
